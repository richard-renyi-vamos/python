import numpy as np
import matplotlib.pyplot as plt


def lorenz(xyz, *, s=12, r=20, b=3):


    x, y, z = xyz
    x_dot = s*(y - x)
    y_dot = r*x - y - x*z
    z_dot = x*y - b*z
    return np.array([x_dot, y_dot, z_dot])


dt = 0.02
num_steps = 10000

xyzs = np.empty((num_steps + 1, 3))  # INITIAL VALUES
xyzs[0] = (0., 1., 1.05)


for i in range(num_steps):
    xyzs[i + 1] = xyzs[i] + lorenz(xyzs[i]) * dt

# PLOT SETTINGS
ax = plt.figure().add_subplot(projection='3d')

ax.plot(*xyzs.T, lw=0.5)
ax.set_xlabel("X dimension")
ax.set_ylabel("Y dimension")
ax.set_zlabel("Z dimension")
ax.set_title("GRAPH: Lorenz Attractor")

plt.show()

"""The parameters can be changed to change the shape of the graph! â˜º"""
